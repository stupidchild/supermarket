<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinba.supermarket.dao.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.xinba.supermarket.entity.Collect" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="value_id" property="valueId" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="INTEGER" />
    <result column="is_attention" property="isAttention" jdbcType="BIT" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, value_id, add_time, is_attention, type_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from nideshop_collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from nideshop_collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xinba.supermarket.entity.Collect" >
    insert into nideshop_collect (id, user_id, value_id, 
      add_time, is_attention, type_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{valueId,jdbcType=INTEGER}, 
      #{addTime,jdbcType=INTEGER}, #{isAttention,jdbcType=BIT}, #{typeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinba.supermarket.entity.Collect" >
    insert into nideshop_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="valueId != null" >
        value_id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="isAttention != null" >
        is_attention,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="valueId != null" >
        #{valueId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=INTEGER},
      </if>
      <if test="isAttention != null" >
        #{isAttention,jdbcType=BIT},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinba.supermarket.entity.Collect" >
    update nideshop_collect
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="valueId != null" >
        value_id = #{valueId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=INTEGER},
      </if>
      <if test="isAttention != null" >
        is_attention = #{isAttention,jdbcType=BIT},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinba.supermarket.entity.Collect" >
    update nideshop_collect
    set user_id = #{userId,jdbcType=INTEGER},
      value_id = #{valueId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=INTEGER},
      is_attention = #{isAttention,jdbcType=BIT},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>